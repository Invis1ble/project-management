name: CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v4
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose --verbose up --wait --no-build
        env:
          XDEBUG_MODE: coverage
      -
        name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost:1180
      -
        name: Check HTTPS reachability
        if: false # Remove this line when the homepage will be configured, or change the path to check
        run: curl -vk --fail-with-body https://localhost
      -
        name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Doctrine Schema Validator
        # @see https://github.com/doctrine/migrations/issues/1406
        #        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate --skip-sync
      -
        name: Check Code Quality via PHP_CodeSniffer
        run: docker compose exec -T php bin/php_codesniffer
      -
        name: Check Code Quality via PHP-CS-Fixer
        run: docker compose exec -T php bin/php-cs-fixer
      -
        name: Rector Cache
        uses: actions/cache@v4
        with:
          path: /tmp/rector
          key: ${{ runner.os }}-rector-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-rector-
      -
        run: mkdir -p /tmp/rector
      -
        name: Rector Dry Run
        run: docker compose exec -T php bin/rector
      -
        name: Execute tests via PHPUnit
        run: docker compose exec -T php vendor/bin/phpunit --coverage-clover var/log/coverage-clover.xml
      -
        name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
